import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";

import { Navigation } from "../components/Navigation";

import {
  readJsonFromFile,
  getFilesFromDataDir,
  generateRoutes,
} from "../utils";

import { NewsProps, PathsEntity } from "../types";
import { Article } from "../components/Article/Article";

const News = ({ news, paths }: NewsProps) => {
  return (
    <div>
      <Head>
        <title>News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main style={{ margin: "10em", marginTop: "5em" }}>
        <div style={{display: 'flex', flexDirection: 'column-reverse'}}>
        {
          // @ts-ignore
          paths.map((params: PathsEntity, index: number) => {
            // @ts-ignore
            return <Navigation params={params} key={index} />;
          })
        }
        </div>

        {news &&
          news.data &&
          news.data.news &&
          news.data.news.map((newsEntity) => {
            return (
              <div key={newsEntity.topic}>
                <h3>{newsEntity.topic}</h3>
                {newsEntity.articles &&
                  newsEntity.articles.map((article, index) => {
                    // @ts-ignore
                    return <Article article={article} key={index} />;
                  })}
              </div>
            );
          })}
      </main>
    </div>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
  const files = (await getFilesFromDataDir()) as string[];

  return {
    paths: generateRoutes(files),
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const news = await readJsonFromFile(`../data/${params?.news}.json`);
  const files = (await getFilesFromDataDir()) as string[];
  const paths = generateRoutes(files);

  return {
    props: { news, paths },
    revalidate: 1,
  };
};

export default News;
